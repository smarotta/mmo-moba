// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: items.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Messages {

  /// <summary>Holder for reflection information generated from items.proto</summary>
  public static partial class ItemsReflection {

    #region Descriptor
    /// <summary>File descriptor for items.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ItemsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtpdGVtcy5wcm90bxIIbWVzc2FnZXMaD3Bvc2l0aW9ucy5wcm90byJNCgRJ",
            "dGVtEgoKAmlkGAEgASgFEgwKBHR5cGUYAiABKAUSKwoKYXR0cmlidXRlcxgD",
            "IAMoCzIXLm1lc3NhZ2VzLkl0ZW1BdHRyaWJ1dGUiUQoLSXRlbVNwYXduZWQS",
            "JAoIcG9zaXRpb24YASABKAsyEi5tZXNzYWdlcy5Qb3NpdGlvbhIcCgRpdGVt",
            "GAIgASgLMg4ubWVzc2FnZXMuSXRlbSJ5Cg1JdGVtQXR0cmlidXRlEhEKCWF0",
            "dHJpYnV0ZRgBIAEoBRIRCgdib29sVmFsGAIgASgISAASEAoGaW50VmFsGAMg",
            "ASgFSAASEgoIZmxvYXRWYWwYBCABKAJIABITCglzdHJpbmdWYWwYBSABKAlI",
            "AEIHCgV2YWx1ZUIuCiBjb20uc20ubW1vLm1vYmEubmV0d29yay5wcm90b2J1",
            "ZkIKSXRlbVByb3Rvc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Messages.PositionsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Messages.Item), global::Messages.Item.Parser, new[]{ "Id", "Type", "Attributes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Messages.ItemSpawned), global::Messages.ItemSpawned.Parser, new[]{ "Position", "Item" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Messages.ItemAttribute), global::Messages.ItemAttribute.Parser, new[]{ "Attribute", "BoolVal", "IntVal", "FloatVal", "StringVal" }, new[]{ "Value" }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Item : pb::IMessage<Item> {
    private static readonly pb::MessageParser<Item> _parser = new pb::MessageParser<Item>(() => new Item());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Item> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Messages.ItemsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item(Item other) : this() {
      id_ = other.id_;
      type_ = other.type_;
      attributes_ = other.attributes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item Clone() {
      return new Item(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    ///unique id of the item (so the server/client knows what item the user is picking up for example)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private int type_;
    /// <summary>
    ///shotgun, armor, boots, potion, etc
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Messages.ItemAttribute> _repeated_attributes_codec
        = pb::FieldCodec.ForMessage(26, global::Messages.ItemAttribute.Parser);
    private readonly pbc::RepeatedField<global::Messages.ItemAttribute> attributes_ = new pbc::RepeatedField<global::Messages.ItemAttribute>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Messages.ItemAttribute> Attributes {
      get { return attributes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Item);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Item other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Type != other.Type) return false;
      if(!attributes_.Equals(other.attributes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      hash ^= attributes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Type);
      }
      attributes_.WriteTo(output, _repeated_attributes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      size += attributes_.CalculateSize(_repeated_attributes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Item other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      attributes_.Add(other.attributes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Type = input.ReadInt32();
            break;
          }
          case 26: {
            attributes_.AddEntriesFrom(input, _repeated_attributes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ItemSpawned : pb::IMessage<ItemSpawned> {
    private static readonly pb::MessageParser<ItemSpawned> _parser = new pb::MessageParser<ItemSpawned>(() => new ItemSpawned());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemSpawned> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Messages.ItemsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemSpawned() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemSpawned(ItemSpawned other) : this() {
      position_ = other.position_ != null ? other.position_.Clone() : null;
      item_ = other.item_ != null ? other.item_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemSpawned Clone() {
      return new ItemSpawned(this);
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 1;
    private global::Messages.Position position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Messages.Position Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 2;
    private global::Messages.Item item_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Messages.Item Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemSpawned);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemSpawned other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Position, other.Position)) return false;
      if (!object.Equals(Item, other.Item)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (position_ != null) hash ^= Position.GetHashCode();
      if (item_ != null) hash ^= Item.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (position_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Position);
      }
      if (item_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Item);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (item_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Item);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemSpawned other) {
      if (other == null) {
        return;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          position_ = new global::Messages.Position();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.item_ != null) {
        if (item_ == null) {
          item_ = new global::Messages.Item();
        }
        Item.MergeFrom(other.Item);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (position_ == null) {
              position_ = new global::Messages.Position();
            }
            input.ReadMessage(position_);
            break;
          }
          case 18: {
            if (item_ == null) {
              item_ = new global::Messages.Item();
            }
            input.ReadMessage(item_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ItemAttribute : pb::IMessage<ItemAttribute> {
    private static readonly pb::MessageParser<ItemAttribute> _parser = new pb::MessageParser<ItemAttribute>(() => new ItemAttribute());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemAttribute> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Messages.ItemsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemAttribute() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemAttribute(ItemAttribute other) : this() {
      attribute_ = other.attribute_;
      switch (other.ValueCase) {
        case ValueOneofCase.BoolVal:
          BoolVal = other.BoolVal;
          break;
        case ValueOneofCase.IntVal:
          IntVal = other.IntVal;
          break;
        case ValueOneofCase.FloatVal:
          FloatVal = other.FloatVal;
          break;
        case ValueOneofCase.StringVal:
          StringVal = other.StringVal;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemAttribute Clone() {
      return new ItemAttribute(this);
    }

    /// <summary>Field number for the "attribute" field.</summary>
    public const int AttributeFieldNumber = 1;
    private int attribute_;
    /// <summary>
    ///speed, attack damage, magic
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Attribute {
      get { return attribute_; }
      set {
        attribute_ = value;
      }
    }

    /// <summary>Field number for the "boolVal" field.</summary>
    public const int BoolValFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool BoolVal {
      get { return valueCase_ == ValueOneofCase.BoolVal ? (bool) value_ : false; }
      set {
        value_ = value;
        valueCase_ = ValueOneofCase.BoolVal;
      }
    }

    /// <summary>Field number for the "intVal" field.</summary>
    public const int IntValFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IntVal {
      get { return valueCase_ == ValueOneofCase.IntVal ? (int) value_ : 0; }
      set {
        value_ = value;
        valueCase_ = ValueOneofCase.IntVal;
      }
    }

    /// <summary>Field number for the "floatVal" field.</summary>
    public const int FloatValFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float FloatVal {
      get { return valueCase_ == ValueOneofCase.FloatVal ? (float) value_ : 0F; }
      set {
        value_ = value;
        valueCase_ = ValueOneofCase.FloatVal;
      }
    }

    /// <summary>Field number for the "stringVal" field.</summary>
    public const int StringValFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StringVal {
      get { return valueCase_ == ValueOneofCase.StringVal ? (string) value_ : ""; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        valueCase_ = ValueOneofCase.StringVal;
      }
    }

    private object value_;
    /// <summary>Enum of possible cases for the "value" oneof.</summary>
    public enum ValueOneofCase {
      None = 0,
      BoolVal = 2,
      IntVal = 3,
      FloatVal = 4,
      StringVal = 5,
    }
    private ValueOneofCase valueCase_ = ValueOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValueOneofCase ValueCase {
      get { return valueCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearValue() {
      valueCase_ = ValueOneofCase.None;
      value_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemAttribute);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemAttribute other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Attribute != other.Attribute) return false;
      if (BoolVal != other.BoolVal) return false;
      if (IntVal != other.IntVal) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FloatVal, other.FloatVal)) return false;
      if (StringVal != other.StringVal) return false;
      if (ValueCase != other.ValueCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Attribute != 0) hash ^= Attribute.GetHashCode();
      if (valueCase_ == ValueOneofCase.BoolVal) hash ^= BoolVal.GetHashCode();
      if (valueCase_ == ValueOneofCase.IntVal) hash ^= IntVal.GetHashCode();
      if (valueCase_ == ValueOneofCase.FloatVal) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FloatVal);
      if (valueCase_ == ValueOneofCase.StringVal) hash ^= StringVal.GetHashCode();
      hash ^= (int) valueCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Attribute != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Attribute);
      }
      if (valueCase_ == ValueOneofCase.BoolVal) {
        output.WriteRawTag(16);
        output.WriteBool(BoolVal);
      }
      if (valueCase_ == ValueOneofCase.IntVal) {
        output.WriteRawTag(24);
        output.WriteInt32(IntVal);
      }
      if (valueCase_ == ValueOneofCase.FloatVal) {
        output.WriteRawTag(37);
        output.WriteFloat(FloatVal);
      }
      if (valueCase_ == ValueOneofCase.StringVal) {
        output.WriteRawTag(42);
        output.WriteString(StringVal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Attribute != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Attribute);
      }
      if (valueCase_ == ValueOneofCase.BoolVal) {
        size += 1 + 1;
      }
      if (valueCase_ == ValueOneofCase.IntVal) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IntVal);
      }
      if (valueCase_ == ValueOneofCase.FloatVal) {
        size += 1 + 4;
      }
      if (valueCase_ == ValueOneofCase.StringVal) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StringVal);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemAttribute other) {
      if (other == null) {
        return;
      }
      if (other.Attribute != 0) {
        Attribute = other.Attribute;
      }
      switch (other.ValueCase) {
        case ValueOneofCase.BoolVal:
          BoolVal = other.BoolVal;
          break;
        case ValueOneofCase.IntVal:
          IntVal = other.IntVal;
          break;
        case ValueOneofCase.FloatVal:
          FloatVal = other.FloatVal;
          break;
        case ValueOneofCase.StringVal:
          StringVal = other.StringVal;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Attribute = input.ReadInt32();
            break;
          }
          case 16: {
            BoolVal = input.ReadBool();
            break;
          }
          case 24: {
            IntVal = input.ReadInt32();
            break;
          }
          case 37: {
            FloatVal = input.ReadFloat();
            break;
          }
          case 42: {
            StringVal = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
